script.
  // REACT FUNCTIONALITY
  var activeEmoji = '#{currentReact}'

  var upload = '#{upload._id}'
  var csrf = '#{_csrf}'

  $('.react img').on('release click', function (e) {

    // dont move browser
    e.preventDefault();

    if(!user){
      return swal({
        text: "Please register to react to content",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Sign Up Now'
      }).then(function (result) {
        if (result.value) {
          window.location.href = "/signup";
        }
      })
    }

    // turn all emojis to darkened mode
    // change opacities
    $('.react img').css({
      opacity: '0.4'
    })

    // make the
    //    $(this).css({
    //      opacity: 0.85
    //    })

    // note active emoji
    var oldEmoji = activeEmoji

    console.log(oldEmoji + 'old emoji');



    var emoji = $(this).attr('id')


    console.log(emoji + ' emoji');

    activeEmoji = emoji;

    console.log(activeEmoji + ' active emoji');

    var unreact = (oldEmoji == activeEmoji) // the old react is the same as the new (user wants to remove react)

    console.log('should unreact emoji')

    // the content was already reacted to, we need to decrement
    // decrement old emoji if needed
    if(oldEmoji){

      // find the value of a paragraph of the active emoji
      var oldEmojiValue = $($('p.' + activeEmoji)[0]).text()




      console.log(oldEmojiValue + ' old emoji value')


      var decrementedValue = parseInt(oldEmojiValue) - 1


      var updateEmoji = $('p.' + oldEmoji).text(decrementedValue)

    }

    // if the user removed the react, there is no active emoji
    if(unreact) {
      activeEmoji = null
      $(".react img").css({ // reset all reacts opacity
        opacity: 0.85
      })

      // aka it's not a removal of a react
      // if user chose a different react, update the new react value
    } else {

      console.log('new react emoji');

      var newEmojiValue = $($('p.' + emoji)[0]).text()

      console.log('new emoji value ' + newEmojiValue)


      var incrementedValue = parseInt(newEmojiValue) + 1
      console.log(newEmojiValue)
      var updatedEmojiValue = $('p.' + emoji).text(incrementedValue)
    }

    var data = {
      _csrf : csrf,
      emoji
    }

    $.ajax({
      type: 'POST',
      url: `/api/react/${upload}/${user}`,
      data,
      success: function (data) {
        console.log(data);
      },
      error: function (err) {
        console.log(err);
      }
    });


    // app.post('/api/react/:upload/:user', internalApiController.react);


  })